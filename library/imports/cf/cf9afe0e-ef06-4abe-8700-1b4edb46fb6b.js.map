{"version":3,"sources":["assets/UISuperScrollView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UISuperLayout from './UISuperLayout';\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class UISpuerScrollView extends cc.ScrollView {\n    public deltaMove = cc.Vec2.ZERO\n    public get view(): cc.Node { return this['_view'] }\n    public set autoScrolling(value: boolean) { this['_autoScrolling'] = value }\n    public get autoScrolling() { return this['_autoScrolling'] }\n    private _layout: UISuperLayout = null\n    private get layout(): UISuperLayout {\n        if (this._layout == null) {\n            this._layout = this.content.getComponent(UISuperLayout)\n        }\n        return this._layout\n    }\n    private _onTouchMoved(event: cc.Event.EventTouch, captureListeners) {\n        super['_onTouchMoved'](event, captureListeners)\n        let delta = cc.v2(event.getLocation().x - event.getPreviousLocation().x, event.getLocation().y - event.getPreviousLocation().y)\n        if (this.vertical && delta.y != 0 || this.horizontal && delta.x != 0) {\n            this.deltaMove = delta\n        }\n    }\n    private _dispatchEvent(event) {\n        super['_dispatchEvent'](event)\n        if (event == 'scroll-ended') {\n            this.deltaMove = cc.Vec2.ZERO\n        }\n    }\n\n    public calculateBoundary() {\n        this['_calculateBoundary']()\n    }\n    public getHowMuchOutOfBoundary(offset?: cc.Vec2) {\n        return this['_getHowMuchOutOfBoundary'](offset)\n    }\n    _getContentTopBoundary() {\n        let offset = 0\n        if (this.layout?.header) {\n            let local\n            if (this.layout.childBoundingBox) {\n                local = this.view.convertToNodeSpaceAR(cc.v2(0, this.layout.header.getBoundingBoxToWorld().yMax))\n            } else {\n                local = this.view.convertToNodeSpaceAR(cc.v2(0, this.layout.header['getBounding']().yMax))\n            }\n            offset = local.y + this.layout.paddingTop\n        }\n        return offset;\n    }\n    _getContentBottomBoundary() {\n        let offset = 0\n        if (this.layout?.footer) {\n            let local\n            if (this.layout.childBoundingBox) {\n                local = this.view.convertToNodeSpaceAR(cc.v2(0, this.layout.footer.getBoundingBoxToWorld().yMin))\n            } else {\n                local = this.view.convertToNodeSpaceAR(cc.v2(0, this.layout.footer['getBounding']().yMin))\n            }\n            offset = local.y - this.layout.paddingBottom\n        }\n        return offset\n    }\n    _getContentLeftBoundary() {\n        let offset = 0\n        if (this.layout?.header) {\n            let local\n            if (this.layout.childBoundingBox) {\n                local = this.view.convertToNodeSpaceAR(cc.v2(this.layout.header.getBoundingBoxToWorld().xMin, 0))\n            } else {\n                local = this.view.convertToNodeSpaceAR(cc.v2(this.layout.header['getBounding']().xMin, 0))\n            }\n            offset = local.x - this.layout.paddingLeft\n        }\n        return offset\n    }\n    _getContentRightBoundary() {\n        let offset = 0\n        if (this.layout?.footer) {\n            let local\n            if (this.layout.childBoundingBox) {\n                local = this.view.convertToNodeSpaceAR(cc.v2(this.layout.footer.getBoundingBoxToWorld().xMax, 0))\n            } else {\n                local = this.view.convertToNodeSpaceAR(cc.v2(this.layout.footer['getBounding']().xMax, 0))\n            }\n            offset = local.x + this.layout.paddingRight\n        }\n        return offset\n    }\n}\n"]}